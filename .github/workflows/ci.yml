---
name: CI
on:
  push:
    branches:
      - main
      - 5.x
  pull_request:
  schedule:
    - cron: '15 3 * * 1'
jobs:
  php-lint:
    name: "PHP linter"
    runs-on: ubuntu-24.04
    timeout-minutes: 2
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: "${{ matrix.php-version }}"
          ini-file: development
          tools: composer:v2
          coverage: none
      - name: "Show Composer version"
        run: composer --version
      - name: "Show the Composer configuration"
        run: composer config --global --list
      - name: "Run PHP lint"
        run: "composer ci:php:lint"
    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "8.3"
  code-quality:
    name: "Code quality checks"
    runs-on: ubuntu-24.04
    timeout-minutes: 2
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          php-version: "${{ matrix.php-version }}"
          ini-file: development
          tools: composer:v2
          extensions: zip
          coverage: none
      - name: "Show Composer version"
        run: composer --version
      - name: "Show the Composer configuration"
        run: composer config --global --list
      - name: "Install Composer dependencies"
        run: "composer update --no-ansi --no-progress"
      - name: "Run command"
        run: "composer ci:${{ matrix.command }}"
    strategy:
      fail-fast: false
      matrix:
        command:
          - "php:stan"
        php-version:
          - "8.3"
  unit-tests:
    name: "Unit tests"
    runs-on: ubuntu-24.04
    needs: php-lint
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          php-version: "${{ matrix.php-version }}"
          ini-file: development
          tools: composer:v2
          extensions: dom, json, libxml, zip
          coverage: none
          ini-values: error_reporting=E_ALL
      - name: "Show Composer version"
        run: composer --version
      - name: "Show the Composer configuration"
        run: composer config --global --list
      - name: "Install TYPO3 Core"
        env:
          TYPO3: "${{ matrix.typo3-version }}"
        run: |
          composer require --no-ansi --no-interaction --no-progress --no-install typo3/cms-core:"$TYPO3"
          composer show
      - name: "Install lowest dependencies with composer"
        if: "matrix.composer-dependencies == 'lowest'"
        run: |
          composer update --no-ansi --no-interaction --no-progress --with-dependencies --prefer-lowest
          composer show
      - name: "Install highest dependencies with composer"
        if: "matrix.composer-dependencies == 'highest'"
        run: |
          composer update --no-ansi --no-interaction --no-progress --with-dependencies
          composer show
      - name: "Run unit tests"
        run: "composer ci:tests:unit"
    strategy:
      fail-fast: false
      matrix:
        include:
          - typo3-version: "^11.5"
            php-version: "7.4"
            composer-dependencies: lowest
          - typo3-version: "^11.5"
            php-version: "7.4"
            composer-dependencies: highest
          - typo3-version: "^11.5"
            php-version: "8.0"
            composer-dependencies: lowest
          - typo3-version: "^11.5"
            php-version: "8.0"
            composer-dependencies: highest
          - typo3-version: "^11.5"
            php-version: "8.1"
            composer-dependencies: lowest
          - typo3-version: "^11.5"
            php-version: "8.1"
            composer-dependencies: highest
          - typo3-version: "^11.5"
            php-version: "8.2"
            composer-dependencies: lowest
          - typo3-version: "^11.5"
            php-version: "8.2"
            composer-dependencies: highest
          - typo3-version: "^11.5"
            php-version: "8.3"
            composer-dependencies: lowest
          - typo3-version: "^11.5"
            php-version: "8.3"
            composer-dependencies: highest
  functional-tests:
    name: "Functional tests"
    runs-on: ubuntu-24.04
    timeout-minutes: 5
    needs: php-lint
    env:
      DB_DATABASE: typo3
      DB_USER: root
      DB_PASSWORD: root
      DB_HOST: localhost
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          php-version: "${{ matrix.php-version }}"
          ini-file: development
          tools: composer:v2
          extensions: dom, json, libxml, mysqli, zip
          coverage: none
          ini-values: error_reporting=E_ALL
      - name: "Show Composer version"
        run: composer --version
      - name: "Show the Composer configuration"
        run: composer config --global --list
      - name: "Install TYPO3 Core"
        env:
          TYPO3: "${{ matrix.typo3-version }}"
        run: |
          composer require --no-ansi --no-interaction --no-progress --no-install typo3/cms-core:"$TYPO3"
          composer show
      - name: "Install lowest dependencies with composer"
        if: "matrix.composer-dependencies == 'lowest'"
        run: |
          composer update --no-ansi --no-interaction --no-progress --with-dependencies --prefer-lowest
          composer show
      - name: "Install highest dependencies with composer"
        if: "matrix.composer-dependencies == 'highest'"
        run: |
          composer update --no-ansi --no-interaction --no-progress --with-dependencies
          composer show
      - name: "Start MySQL"
        run: "sudo /etc/init.d/mysql start"
      - name: "Create the tests directory"
        run: "mkdir -p .Build/public/typo3temp/var/tests"
      - name: "Run functional tests"
        run: |
          export typo3DatabaseName="$DB_DATABASE";
          export typo3DatabaseHost="$DB_HOST";
          export typo3DatabaseUsername="$DB_USER";
          export typo3DatabasePassword="$DB_PASSWORD";
          composer ci:tests:functional
    strategy:
      fail-fast: false
      matrix:
        include:
          - typo3-version: "^11.5"
            php-version: "7.4"
            composer-dependencies: lowest
          - typo3-version: "^11.5"
            php-version: "7.4"
            composer-dependencies: highest
          - typo3-version: "^11.5"
            php-version: "8.0"
            composer-dependencies: lowest
          - typo3-version: "^11.5"
            php-version: "8.0"
            composer-dependencies: highest
          - typo3-version: "^11.5"
            php-version: "8.1"
            composer-dependencies: lowest
          - typo3-version: "^11.5"
            php-version: "8.1"
            composer-dependencies: highest
          - typo3-version: "^11.5"
            php-version: "8.2"
            composer-dependencies: lowest
          - typo3-version: "^11.5"
            php-version: "8.2"
            composer-dependencies: highest
          - typo3-version: "^11.5"
            php-version: "8.3"
            composer-dependencies: lowest
          - typo3-version: "^11.5"
            php-version: "8.3"
            composer-dependencies: highest
  legacy-functional-tests:
    name: "Legacy functional tests"
    runs-on: ubuntu-24.04
    timeout-minutes: 6
    needs: php-lint
    env:
      DB_DATABASE: typo3
      DB_USER: root
      DB_PASSWORD: root
      DB_HOST: localhost
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        env:
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          php-version: "${{ matrix.php-version }}"
          ini-file: development
          tools: composer:v2
          extensions: dom, json, libxml, mysqli, zip
          coverage: none
          ini-values: error_reporting=E_ALL
      - name: "Show Composer version"
        run: composer --version
      - name: "Show the Composer configuration"
        run: composer config --global --list
      - name: "Install TYPO3 Core"
        env:
          TYPO3: "${{ matrix.typo3-version }}"
        run: |
          composer require --no-ansi --no-interaction --no-progress --no-install typo3/cms-core:"$TYPO3"
          composer show
      - name: "Install lowest dependencies with composer"
        if: "matrix.composer-dependencies == 'lowest'"
        run: |
          composer update --no-ansi --no-interaction --no-progress --with-dependencies --prefer-lowest
          composer show
      - name: "Install highest dependencies with composer"
        if: "matrix.composer-dependencies == 'highest'"
        run: |
          composer update --no-ansi --no-interaction --no-progress --with-dependencies
          composer show
      - name: "Start MySQL"
        run: "sudo /etc/init.d/mysql start"
      - name: "Create the tests directory"
        run: "mkdir -p .Build/public/typo3temp/var/tests"
      - name: "Run legacy functional tests"
        run: |
          export typo3DatabaseName="$DB_DATABASE";
          export typo3DatabaseHost="$DB_HOST";
          export typo3DatabaseUsername="$DB_USER";
          export typo3DatabasePassword="$DB_PASSWORD";
          composer ci:tests:legacy-functional
    strategy:
      fail-fast: false
      matrix:
        include:
          - typo3-version: "^11.5"
            php-version: "7.4"
            composer-dependencies: lowest
          - typo3-version: "^11.5"
            php-version: "7.4"
            composer-dependencies: highest
          - typo3-version: "^11.5"
            php-version: "8.0"
            composer-dependencies: lowest
          - typo3-version: "^11.5"
            php-version: "8.0"
            composer-dependencies: highest
          - typo3-version: "^11.5"
            php-version: "8.1"
            composer-dependencies: lowest
          - typo3-version: "^11.5"
            php-version: "8.1"
            composer-dependencies: highest
          - typo3-version: "^11.5"
            php-version: "8.2"
            composer-dependencies: lowest
          - typo3-version: "^11.5"
            php-version: "8.2"
            composer-dependencies: highest
          - typo3-version: "^11.5"
            php-version: "8.3"
            composer-dependencies: lowest
          - typo3-version: "^11.5"
            php-version: "8.3"
            composer-dependencies: highest
  shellcheck:
    name: Check shell scripts
    runs-on: ubuntu-24.04
    timeout-minutes: 2
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check scripts
        run: |
          Build/Scripts/runTests.sh -s shellcheck
  documentation:
    name: Documentation
    runs-on: ubuntu-24.04
    timeout-minutes: 2
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Test if the documentation will render without warnings
        run: |
          docker run --rm --pull always -v $(pwd):/project \
             ghcr.io/typo3-documentation/render-guides:latest --config=Documentation --no-progress --fail-on-log
