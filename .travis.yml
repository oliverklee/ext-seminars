sudo: false

language: php

env:
  global:
  - DATABASE_USER=travis DATABASE_HOST=localhost DATABASE_PORT=3306 DATABASE_NAME=typo3 DATABASE_PASSWORD=''
  - TYPO3_PATH_ROOT=$PWD/.Build/public

matrix:
  exclude:

cache:
  directories:
  - .Build/vendor
  - $HOME/.composer/cache

before_install:
- phpenv config-rm xdebug.ini || echo "xdebug not available"

install:
- >
  composer require typo3/minimal:"$TYPO3";
  composer show;
- >
  .Build/vendor/bin/typo3cms install:setup --non-interactive --site-setup-type="site"
  --database-user-name="${DATABASE_USER}" --database-host-name="${DATABASE_HOST}"
  --database-port="${DATABASE_PORT}" --database-name="${DATABASE_NAME}"
  --admin-user-name="admin" --admin-password="password" --site-name="Test installation";
- >
  echo;
  echo "Restoring the composer.json";
  git checkout .;

before_script:
- mysql -u ${DATABASE_USER} ${DATABASE_NAME} -e "INSERT INTO be_users (username, password) VALUES ('_cli_phpunit', 'password')"

script:
- >
  echo;
  echo "Linting all PHP files";
  composer ci:php:lint;
- >
  echo;
  echo "Running the unit tests";
  composer ci:tests:unit;
- >
  echo;
  echo "Running the legacy unit tests";
  composer ci:tests:unit-legacy;
- >
  echo;
  echo "Running the legacy functional tests";
  composer ci:tests:functional-legacy;

jobs:
  include:
  - stage: test
    php: 7.1
    env: TYPO3=^8.7 RUN_TESTS_COMMAND=".Build/vendor/bin/typo3 phpunit:run"
  - stage: test
    php: 7.0
    env: TYPO3=^8.7 RUN_TESTS_COMMAND=".Build/vendor/bin/typo3 phpunit:run"
  - stage: test
    php: 7.1
    env: TYPO3=^7.6 RUN_TESTS_COMMAND=".Build/public/typo3/cli_dispatch.phpsh phpunit"
  - stage: test
    php: 7.0
    env: TYPO3=^7.6 RUN_TESTS_COMMAND=".Build/public/typo3/cli_dispatch.phpsh phpunit"
  - stage: release to ter
    if: tag IS present AND env(TYPO3_ORG_USERNAME) IS present AND env(TYPO3_ORG_PASSWORD) IS present
    php: 7.0
    before_install: skip
    install: skip
    before_script: skip
    script:
    - >
      echo;
      echo "Preparing upload of release ${TRAVIS_TAG} to TER";
      echo;
      echo;
      composer global require helhum/ter-client;
    - >
      TAG_MESSAGE=`git tag -n10 -l $TRAVIS_TAG | sed 's/^[0-9.]*[ ]*//g'`;
      echo;
      echo "Uploading release ${TRAVIS_TAG} to TER";
      echo;
      echo;
      $HOME/.composer/vendor/bin/ter-client upload seminars . -u "$TYPO3_ORG_USERNAME" -p "$TYPO3_ORG_PASSWORD" -m "$TAG_MESSAGE";
