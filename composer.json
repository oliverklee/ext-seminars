{
	"name": "oliverklee/seminars",
	"type": "typo3-cms-extension",
	"description": "TYPO3 extension that allows you to create and manage a list of seminars, workshops, lectures, theater performances and other events, allowing front-end users to sign up. FE users also can create and edit events.",
	"keywords": [
		"seminars",
		"workshops",
		"event",
		"registration",
		"education",
		"talks"
	],
	"homepage": "https://www.oliverklee.de/typo3-services/seminarmanager/",
	"license": "GPL-2.0-or-later",
	"authors": [
		{
			"name": "Oliver Klee",
			"email": "typo3-coding@oliverklee.de",
			"homepage": "https://www.oliverklee.de",
			"role": "developer"
		}
	],
	"require": {
		"php": "^7.2.0 || ~8.0.0",
		"ext-json": "*",
		"ext-pdo": "*",
		"digedag/rn-base": "~1.15.0",
		"dmk/mkforms": "~10.1.0",
		"doctrine/dbal": "^2.10",
		"oliverklee/feuserextrafields": "^3.2.0 || ^5.2.1",
		"oliverklee/oelib": "^4.3.1 || ^5.0.1",
		"pelago/emogrifier": "^4.0.0 || ^5.0.1 || ^6.0.0",
		"psr/http-message": "^1.0",
		"psr/log": "^1.0 || ^2.0 || ^3.0",
		"sjbr/static-info-tables": "^6.9.5 || ^11.5.3",
		"swiftmailer/swiftmailer": "^5.4.12",
		"symfony/console": "^4.4 || ^5.2 || ^6.0",
		"symfony/mailer": "^4.4 || ^5.2 || ^6.0",
		"symfony/mime": "^4.4 || ^5.2 || ^6.0",
		"typo3/cms-backend": "^9.5.7 || ^10.4.6",
		"typo3/cms-core": "^9.5.7 || ^10.4.6",
		"typo3/cms-extbase": "^9.5.7 || ^10.4.6",
		"typo3/cms-fluid": "^9.5.7 || ^10.4.6",
		"typo3/cms-frontend": "^9.5.7 || ^10.4.6",
		"typo3fluid/fluid": "^2.6.10"
	},
	"replace": {
		"typo3-ter/seminars": "self.version"
	},
	"conflict": {
		"helhum/typo3-console-plugin": "< 2.0.7"
	},
	"require-dev": {
		"ergebnis/composer-normalize": "~2.15.0",
		"friendsofphp/php-cs-fixer": "^3.4.0",
		"helhum/typo3-console": "^5.8.6 || ^6.7.2 || ^7.1.2",
		"helmich/typo3-typoscript-lint": "^2.5.2",
		"jangregor/phpstan-prophecy": "^1.0.0",
		"mikey179/vfsstream": "^1.6.11",
		"nimut/testing-framework": "^6.0.1",
		"oliverklee/phpunit": "^8.5.0",
		"php-coveralls/php-coveralls": "^2.5.3",
		"phpspec/prophecy": "^1.15.0",
		"phpstan/extension-installer": "~1.1.0",
		"phpstan/phpstan": "^1.9.0",
		"phpstan/phpstan-phpunit": "^1.2.2",
		"phpstan/phpstan-strict-rules": "^1.4.4",
		"phpunit/phpunit": "^8.5.31",
		"saschaegerer/phpstan-typo3": "~1.1.2",
		"squizlabs/php_codesniffer": "^3.7.1",
		"typo3/class-alias-loader": "^1.1.4",
		"typo3/cms-install": "^9.5.7 || ^10.4.6",
		"typo3/cms-scheduler": "^9.5.7 || ^10.4.6",
		"typo3/coding-standards": "^0.5.5"
	},
	"suggest": {
		"oliverklee/onetimeaccount": "for event registration without an explicit FE login",
		"typo3/cms-install": "for running the upgrade wizards"
	},
	"config": {
		"allow-plugins": {
			"ergebnis/composer-normalize": true,
			"helhum/typo3-console-plugin": true,
			"phpstan/extension-installer": true,
			"typo3/class-alias-loader": true,
			"typo3/cms-composer-installers": true
		},
		"preferred-install": {
			"*": "dist"
		},
		"process-timeout": 1000,
		"sort-packages": true,
		"vendor-dir": ".Build/vendor"
	},
	"extra": {
		"branch-alias": {
			"dev-main": "4.2.x-dev"
		},
		"helhum/typo3-console": {
			"install-extension-dummy": "0"
		},
		"typo3/cms": {
			"app-dir": ".Build",
			"extension-key": "seminars",
			"web-dir": ".Build/public"
		}
	},
	"autoload": {
		"psr-4": {
			"OliverKlee\\Seminars\\": "Classes/"
		}
	},
	"autoload-dev": {
		"psr-4": {
			"OliverKlee\\Seminars\\Tests\\": "Tests/"
		}
	},
	"prefer-stable": true,
	"scripts": {
		"post-autoload-dump": [
			"@link-extension"
		],
		"ci": [
			"@ci:static",
			"@ci:dynamic"
		],
		"ci:composer:normalize": "@composer normalize --dry-run",
		"ci:coverage": [
			"@ci:coverage:unit",
			"@ci:coverage:functional"
		],
		"ci:coverage:functional": [
			"@coverage:create-directories",
			"find 'Tests/Functional' -wholename '*Test.php' | parallel --gnu 'echo; echo \"Running functional test suite {}\"; .Build/vendor/bin/phpunit -c Configuration/FunctionalTests.xml --whitelist Classes --coverage-php=\".Build/coverage/{}.cov\" {}';"
		],
		"ci:coverage:legacy": [
			"@coverage:create-directories",
			".Build/vendor/bin/typo3 phpunit:run --options=\"--whitelist Classes --coverage-php=.Build/coverage/legacy.cov\" Tests/LegacyUnit"
		],
		"ci:coverage:merge": [
			"@coverage:create-directories",
			"tools/phpcov merge --clover=./build/logs/clover.xml ./.Build/coverage/"
		],
		"ci:coverage:unit": [
			"@coverage:create-directories",
			".Build/vendor/bin/phpunit -c Configuration/UnitTests.xml --whitelist Classes --coverage-php=.Build/coverage/unit.cov Tests/Unit"
		],
		"ci:dynamic": [
			"@ci:tests"
		],
		"ci:php": [
			"@ci:php:cs-fixer",
			"@ci:php:lint",
			"@ci:php:sniff",
			"@ci:php:stan"
		],
		"ci:php:cs-fixer": "php-cs-fixer fix -v --dry-run --using-cache no --diff",
		"ci:php:lint": "find .*.php *.php Classes Configuration Tests -name '*.php' -print0 | xargs -0 -n 1 -P 4 php -l",
		"ci:php:rector": ".Build/vendor/bin/rector --dry-run",
		"ci:php:sniff": ".Build/vendor/bin/phpcs Classes Configuration Tests",
		"ci:php:stan": ".Build/vendor/bin/phpstan --no-progress",
		"ci:static": [
			"@ci:composer:normalize",
			"@ci:php:cs-fixer",
			"@ci:php:lint",
			"@ci:php:sniff",
			"@ci:php:stan",
			"@ci:ts:lint"
		],
		"ci:tests": [
			"@ci:tests:unit",
			"@ci:tests:unit-legacy",
			"@ci:tests:functional"
		],
		"ci:tests:functional": "find 'Tests/Functional' -wholename '*Test.php' | parallel --gnu 'echo; echo \"Running functional test suite {}\"; .Build/vendor/bin/phpunit -c Configuration/FunctionalTests.xml {}';",
		"ci:tests:unit": ".Build/vendor/bin/phpunit -c Configuration/UnitTests.xml Tests/Unit",
		"ci:tests:unit-legacy": ".Build/vendor/bin/typo3 phpunit:run Tests/LegacyUnit",
		"ci:ts:lint": ".Build/vendor/bin/typoscript-lint -c Configuration/TsLint.yml --ansi -n --fail-on-warnings -vvv Configuration/TypoScript ext_typoscript_setup.txt",
		"coverage:create-directories": "mkdir -p build/logs .Build/coverage",
		"create-legacy-test-setup": ".Build/vendor/bin/typo3cms install:setup --no-interaction --site-setup-type=\"site\" --database-user-name=\"root\" --database-user-password=\"root\" --database-host-name=\"192.168.101.2\" --database-name=\"seminars_test\" --admin-user-name=\"admin\" --admin-password=\"password\" --site-name=\"Test installation\"",
		"fix": [
			"@fix:composer",
			"@fix:php"
		],
		"fix:composer": "@composer normalize",
		"fix:php": [
			"@fix:php:cs",
			"@fix:php:sniff"
		],
		"fix:php:cs": "php-cs-fixer fix",
		"fix:php:sniff": "phpcbf Classes Configuration Tests",
		"link-extension": [
			"@php -r 'is_dir($extFolder=__DIR__.\"/.Build/public/typo3conf/ext/\") || mkdir($extFolder, 0777, true);'",
			"@php -r 'file_exists($extFolder=__DIR__.\"/.Build/public/typo3conf/ext/seminars\") || symlink(__DIR__,$extFolder);'"
		],
		"php:rector": ".Build/vendor/bin/rector",
		"phpstan:baseline": ".Build/vendor/bin/phpstan  --generate-baseline=phpstan-baseline.neon",
		"prepare-release": [
			"rm -rf .Build",
			"rm -rf .github",
			"rm -rf .phive",
			"rm -rf Tests",
			"rm .editorconfig",
			"rm .gitattributes",
			"rm .gitignore",
			"rm .php-cs-fixer.php",
			"rm Configuration/FunctionalTests.xml",
			"rm Configuration/UnitTests.xml",
			"rm docker-compose.yml",
			"rm phpcs.xml.dist",
			"rm phpstan-baseline.neon",
			"rm phpstan.neon",
			"rm rector.php"
		],
		"typo3:docs:render": [
			"docker-compose run --rm t3docmake"
		],
		"typo3:docs:serve": [
			"php -S 127.0.0.1:4000 -t Documentation-GENERATED-temp/Result/project/0.0.0"
		]
	},
	"scripts-descriptions": {
		"ci": "Runs all dynamic and static code checks.",
		"ci:composer:normalize": "Checks the composer.json.",
		"ci:coverage": "Generates the code coverage report for unit and functional tests.",
		"ci:coverage:functional": "Generates the code coverage report for functional tests.",
		"ci:coverage:legacy": "Generates the code coverage report for legacy tests.",
		"ci:coverage:merge": "Merges the code coverage reports for unit and functional tests.",
		"ci:coverage:unit": "Generates the code coverage report for unit tests.",
		"ci:php": "Runs all static checks for the PHP files.",
		"ci:php:cs-fixer": "Checks the code style with the PHP Coding Standards Fixer (PHP-CS-Fixer).",
		"ci:php:lint": "Lints the PHP files for syntax errors.",
		"ci:php:rector": "Checks for code for changes by Rector.",
		"ci:php:sniff": "Checks the code style with PHP_CodeSniffer (PHPCS).",
		"ci:php:stan": "Checks the PHP types using PHPStan.",
		"ci:static": "Runs all static code analysis checks for the code.",
		"coverage:create-directories": "Creates the directories needed for recording and merging the code coverage reports.",
		"fix": "Runs all automatic code style fixes.",
		"fix:composer": "Runs all fixers for the PHP code.",
		"fix:php": "Runs all fixers for the PHP code.",
		"fix:php:cs": "Fixes the code style with PHP-CS-Fixer.",
		"fix:php:sniff": "Fixes the code style with PHP_CodeSniffer.",
		"php:rector": "Updates the code with Rector.",
		"phpstan:baseline": "Updates the PHPStan baseline file to match the code.",
		"prepare-release": "Removes development-only files in preparation of a TER release."
	},
	"support": {
		"issues": "https://github.com/oliverklee/ext-seminars/issues",
		"source": "https://github.com/oliverklee/ext-seminars"
	}
}
